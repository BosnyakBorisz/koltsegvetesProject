<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel7.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>